<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: perftest.proto

namespace Magento\Customer\Model;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>magento.customer.model.TokenResponse</code>
 */
class TokenResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bool tokenFound = 1;</code>
     */
    private $tokenFound = false;
    protected $result;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $tokenFound
     *     @type \Magento\Customer\Model\CustomerData $found
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Perftest::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bool tokenFound = 1;</code>
     * @return bool
     */
    public function getTokenFound()
    {
        return $this->tokenFound;
    }

    /**
     * Generated from protobuf field <code>bool tokenFound = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setTokenFound($var)
    {
        GPBUtil::checkBool($var);
        $this->tokenFound = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.magento.customer.model.CustomerData found = 2;</code>
     * @return \Magento\Customer\Model\CustomerData
     */
    public function getFound()
    {
        return $this->readOneof(2);
    }

    /**
     * Generated from protobuf field <code>.magento.customer.model.CustomerData found = 2;</code>
     * @param \Magento\Customer\Model\CustomerData $var
     * @return $this
     */
    public function setFound($var)
    {
        GPBUtil::checkMessage($var, \Magento\Customer\Model\CustomerData::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getResult()
    {
        return $this->whichOneof("result");
    }

}

